# Development Enviornment File
NEXT_PUBLIC_LICENSE_CONSENT='agree'

# DATABASE_URL='postgresql://<user>:<pass>@<db-host>:<db-port>/<db-name>'
#DB for both Development/Staging and Live Server - NEW DB on heroku
DATABASE_URL="postgres://ilzpplhpoiyiba:108d0df088b7f0085ad43a67ab0399a025fc6376a425b0c362d50ba04ea79196@ec2-34-206-148-196.compute-1.amazonaws.com:5432/dvvu9qenli58h"

#Development Google API credentials
GOOGLE_API_CREDENTIALS={"web":{"client_id":"106157116121-jfj7ks89bh9fa21j6k1b5n62a3ntii1f.apps.googleusercontent.com","project_id":"hibox-schedular-staging","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"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","redirect_uris":["https://hibox-scheduler-new-staging.herokuapp.com/api/integrations/googlecalendar/callback"]}}

#GOOGLE_REDIRECT_URL='https://hibox-scheduler-new-staging.herokuapp.com/api/integrations/googlecalendar/callback'


# To enable Login with Google you need to:
# 1. Set `GOOGLE_API_CREDENTIALS` above
# 2. Set `GOOGLE_LOGIN_ENABLED` to `true`
# When self-hosting please ensure you configure the Google integration as an Internal app so no one else can login to your instance
# @see https://support.google.com/cloud/answer/6158849#public-and-internal&zippy=%2Cpublic-and-internal-applications
GOOGLE_LOGIN_ENABLED=false

#Development
BASE_URL='https://hibox-scheduler-new-staging.herokuapp.com'
NEXT_PUBLIC_APP_URL='https://hibox-scheduler-new-staging.herokuapp.com'


JWT_SECRET='secret'
#This is used so we can bypass emails in auth flows for E2E testing
PLAYWRIGHT_SECRET=

# To enable SAML login, set both these variables
# @see https://github.com/hibox/hibox/tree/main/ee#setting-up-saml-login
# SAML_DATABASE_URL="postgresql://postgres:@localhost:5450/cal-saml"
# SAML_ADMINS='pro@example.com'
# If you use Heroku to deploy Postgres (or use self-signed certs for Postgres) then uncomment the follow line.
# @see https://devcenter.heroku.com/articles/connecting-heroku-postgres#connecting-in-node-js
##PGSSLMODE='no-verify'

# @see: https://github.com/hibox/hibox/issues/263
# Required for Vercel hosting - set NEXTAUTH_URL to equal your BASE_URL
# NEXTAUTH_URL='http://localhost:3000'

# Remove this var if you don't want Cal to collect anonymous usage
 NEXT_PUBLIC_TELEMETRY_KEY=js.c7762hkaohdsg492dmwuk.kdrz4c8kbh2m18rl9hejb
 

# Used for the Office 365 / Outlook.com Calendar integration
MS_GRAPH_CLIENT_ID=6aa0f714-8e21-4849-b3f9-2f2bf0422138
MS_GRAPH_CLIENT_SECRET=nD87Q~qwkdj5cyMIkczm4jIkv4VzEi1zPEH-S

# Used for the Zoom integration (Dev purpose)
ZOOM_CLIENT_ID=DfpduR15SYu7i1qI1Jjlgg
ZOOM_CLIENT_SECRET=zt9zcE2yAH0im5JMhftJ5tCVCN13J8Ck


#Used for the Daily integration
DAILY_API_KEY=b31af18e64b491664938344f7e0c46cd65b25add95d8023a9c82bc2b5af3722e
DAILY_SCALE_PLAN=''
# E-mail settings

# Cal uses nodemailer (@see https://nodemailer.com/about/) to provide email sending. As such we are trying to
# allow access to the nodemailer transports from the .env file. E-mail templates are accessible within lib/emails/

# Configures the global From: header whilst sending emails.
EMAIL_FROM='info@hiboxscheduler.com'
# Configure SMTP settings (@see https://nodemailer.com/smtp/).
# Note: The below configuration for Office 365 has been verified to work.
EMAIL_SERVER_HOST='hiboxscheduler.com'
EMAIL_SERVER_PORT=465
EMAIL_SERVER_USER='info@hiboxscheduler.com'
# Keep in mind that if you have 2FA enabled, you will need to provision an App Password.
EMAIL_SERVER_PASSWORD='DyXaLYdKN#a+'
# ApiKey for cronjobs
CRON_API_KEY='0cc0e6c35519bba620c9360cfe3e68d0'

# Stripe Config
NEXT_PUBLIC_STRIPE_PUBLIC_KEY= # pk_test_...
STRIPE_PRIVATE_KEY= # sk_test_...
STRIPE_CLIENT_ID= # ca_...
STRIPE_WEBHOOK_SECRET= # whsec_...
PAYMENT_FEE_PERCENTAGE=0.005 # Take 0.5% commission
PAYMENT_FEE_FIXED=10 # Take 10 additional cents commission

# Application Key for symmetric encryption and decryption
# must be 32 bytes for AES256 encryption algorithm

HIBOX_ENCRYPTION_KEY=qweuhrnc289347598nsjkdfnlwqwerdp

# Intercom Config
NEXT_PUBLIC_INTERCOM_APP_ID=
#Testing for staging CI/CD

